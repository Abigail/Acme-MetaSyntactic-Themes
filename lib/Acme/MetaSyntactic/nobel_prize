#!/usr/bin/perl

use strict;
use warnings;
no warnings 'syntax';

my $url  = "http://nobelprize.org/nobel_prizes/lists/all/all_laureates_c.html";
my $text = `wget -O- -q $url`;

my @data;
while ($text =~ m {<a \s+ href="/nobel_prizes/([^/]+)/laureates/(\d+)/" \s+
                   class="[^"]+"> \s*
                   [^,]+, \s+ ([^<]+)}xg) {
    my ($type, $year, $name) = (ucfirst $1, $2, $3);
    next if $name =~ /No Prize was Awarded/;
    push @data => [$year, $type, $name];
}


print <<'--';
package Acme::MetaSyntactic::nobel_prize;
use strict;
use warnings;
use Acme::MetaSyntactic::MultiList;
our @ISA = qw( Acme::MetaSyntactic::MultiList );

__PACKAGE__ -> init ();

=head1 NAME

Acme::MetaSyntactic::nobel_prize - Nobel prize winners

=head1 DESCRIPTION

This theme has the nobel prize winners, divided into categories. The
first Nobel prizes were awarded in 1901. Nobel prizes have been awarded
for Chemistry, Literature, Medicine, Peace, Physics, and Economics.

The winners are:

=cut

no warnings 'redefine';

sub Acme::MetaSyntactic::load_data {
    my $data;
    my %categories;

    foreach my $line (split /\n/ => <<'=cut') {

=pod

--

foreach my $entry (@data) {
    printf " %4d   %-10s  %s\n" => @$entry;
}

print <<'--';

=cut

        next unless $line =~ /^\s+(\d+)\s+(\w+)\s+(.*)/;
        my ($year, $category, $name) = ($1, lc $2, $3);

        push @{$categories {$category}} => $name;
    }

    while (my ($category, $names) = each %categories) {
        my %seen;
        $$data {names} {$category} = join " " =>
            grep {!$seen {$_} ++}
            map  {$_ = Acme::MetaSyntactic::RemoteList::tr_accent  ($_);
                  $_ = Acme::MetaSyntactic::RemoteList::tr_nonword ($_);
                  s/__+/_/g; s/_$//; s/^_//g; $_} @$names;
    }

    $$data {default} = ':all';

    $data;
}

__END__

=pod

The official website for the Nobel Prize is L<http://nobelprize.org/>.

=head1 CONTRIBUTOR

Abigail

=head1 SEE ALSO

L<Acme::MetaSyntactic>, L<Acme::MetaSyntactic::List>.

=cut

--

__END__
